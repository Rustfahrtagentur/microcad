-- Test --
  operations
  ../books/tutorials/src/lego_brick/base/union.md:11

-- Code --

 1: use std::geo2d::*;
 2: use std::ops::*;
 3: 
 4: thickness = 1.2mm;
 5: width = 31.8mm;
 6: height = 15.8mm;
 7: frame = Frame(width, height, thickness);
 8: struts = Ring(outer_d = 6.51mm, inner_d = 4.8mm)
 9:              .translate(x = [-1..1] * 8mm);
10: 
11: frame | struts; // We could also write `{ frame; struts; }.union()` but the `|` operator is more elegant. 

-- Output --
-- Errors --
-- Model --
  Group -> 2D (root)
    Operation union()⏎ -> 2D
      Group -> 2D
        sketch std::geo2d::Frame(height: Length = 15.8mm, thickness: Length = 1.2mm, width: Length = 31.8mm) -> 2D
          Operation subtract()⏎ -> 2D
            Group -> 2D
              sketch std::geo2d::Rect(height: Length = 15.8mm, width: Length = 31.8mm) -> 2D
                Primitive2D __builtin::geo2d::Rect(height: Scalar = 15.8, width: Scalar = 31.8, x: Scalar = -15.9, y: Scalar = -7.9)⏎ -> 2D
              sketch std::geo2d::Rect(height: Length = 13.4mm, width: Length = 29.4mm) -> 2D
                Primitive2D __builtin::geo2d::Rect(height: Scalar = 13.4, width: Scalar = 29.4, x: Scalar = -14.7, y: Scalar = -6.7)⏎ -> 2D
        Multiplicity -> 2D
          op std::ops::translate(x: Length = -8mm, y: Length = 0mm, z: Length = 0mm) -> 2D
            Transform __builtin::ops::translate(x: Scalar = -8, y: Scalar = 0, z: Scalar = 0)⏎ -> 2D
              sketch std::geo2d::Ring(inner_d: Length = 4.8mm, outer_d: Length = 6.51mm) -> 2D (root)
                Operation subtract()⏎ -> 2D
                  Group -> 2D
                    sketch std::geo2d::Circle(center: (x: Length, y: Length) = (x: Length = 0mm, y: Length = 0mm), radius: Length = 3.255mm) -> 2D
                      Primitive2D __builtin::geo2d::Circle(cx: Scalar = 0, cy: Scalar = 0, radius: Scalar = 3.255)⏎ -> 2D
                    sketch std::geo2d::Circle(center: (x: Length, y: Length) = (x: Length = 0mm, y: Length = 0mm), radius: Length = 2.4mm) -> 2D
                      Primitive2D __builtin::geo2d::Circle(cx: Scalar = 0, cy: Scalar = 0, radius: Scalar = 2.4)⏎ -> 2D
          op std::ops::translate(x: Length = 0mm, y: Length = 0mm, z: Length = 0mm) -> 2D
            Transform __builtin::ops::translate(x: Scalar = 0, y: Scalar = 0, z: Scalar = 0)⏎ -> 2D
              sketch std::geo2d::Ring(inner_d: Length = 4.8mm, outer_d: Length = 6.51mm) -> 2D (root)
                Operation subtract()⏎ -> 2D
                  Group -> 2D
                    sketch std::geo2d::Circle(center: (x: Length, y: Length) = (x: Length = 0mm, y: Length = 0mm), radius: Length = 3.255mm) -> 2D
                      Primitive2D __builtin::geo2d::Circle(cx: Scalar = 0, cy: Scalar = 0, radius: Scalar = 3.255)⏎ -> 2D
                    sketch std::geo2d::Circle(center: (x: Length, y: Length) = (x: Length = 0mm, y: Length = 0mm), radius: Length = 2.4mm) -> 2D
                      Primitive2D __builtin::geo2d::Circle(cx: Scalar = 0, cy: Scalar = 0, radius: Scalar = 2.4)⏎ -> 2D
          op std::ops::translate(x: Length = 8mm, y: Length = 0mm, z: Length = 0mm) -> 2D
            Transform __builtin::ops::translate(x: Scalar = 8, y: Scalar = 0, z: Scalar = 0)⏎ -> 2D
              sketch std::geo2d::Ring(inner_d: Length = 4.8mm, outer_d: Length = 6.51mm) -> 2D (root)
                Operation subtract()⏎ -> 2D
                  Group -> 2D
                    sketch std::geo2d::Circle(center: (x: Length, y: Length) = (x: Length = 0mm, y: Length = 0mm), radius: Length = 3.255mm) -> 2D
                      Primitive2D __builtin::geo2d::Circle(cx: Scalar = 0, cy: Scalar = 0, radius: Scalar = 3.255)⏎ -> 2D
                    sketch std::geo2d::Circle(center: (x: Length, y: Length) = (x: Length = 0mm, y: Length = 0mm), radius: Length = 2.4mm) -> 2D
                      Primitive2D __builtin::geo2d::Circle(cx: Scalar = 0, cy: Scalar = 0, radius: Scalar = 2.4)⏎ -> 2D

-- Test Result --
OK
Export successful.
