// Copyright © 2025 The µcad authors <info@ucad.xyz>
// SPDX-License-Identifier: AGPL-3.0-or-later

//! µcad look up table generation.

use std::f64::consts::PI;

const TABLE_SIZE: usize = 1024;

fn generate_sin_cos_look_up_tables() {
    use std::{env, io::Write as _, path};
    let out_dir = env::var("OUT_DIR").expect("Env variable");
    let path = path::Path::new(&out_dir).join("microcad_core_sin_cos.rs");

    let mut code = String::from(
        r#"// This code was generated by microcad_core/build.rs
// Copyright © 2025 The µcad authors <info@ucad.xyz>
// SPDX-License-Identifier: AGPL-3.0-or-later

"#,
    );

    code += &format!("pub const SIN_TABLE: [f64; {TABLE_SIZE}] = [");

    for i in 0..TABLE_SIZE {
        let angle = 2.0 * PI * (i as f64) / (TABLE_SIZE as f64);
        code += &format!("{:.16}, ", angle.sin());
    }
    code += "];";

    code += &format!("pub const COS_TABLE: [f64; {TABLE_SIZE}] = [");

    for i in 0..TABLE_SIZE {
        let angle = 2.0 * PI * (i as f64) / (TABLE_SIZE as f64);
        code += &format!("{:.16}, ", angle.cos());
    }
    code += "];";

    std::fs::File::create(path)
        .expect("file access error")
        .write_all(
            rustfmt_wrapper::rustfmt(code)
                .expect("Valid Rust code")
                .as_bytes(),
        )
        .expect("write error");
}

fn main() {
    generate_sin_cos_look_up_tables();
}
