-- Test --
  workbench_example
  ../doc/structure/functions.md:98

-- Code --

 1: sketch PunchedDisk(radius: Length) {
 2:     use std::geo2d::Circle;
 3: 
 4:     // calculate inner from radius in a method
 5:     fn inner() { return radius/2; }
 6: 
 7:     // generate donut (and call inner)
 8:     Circle(radius) - Circle(inner());
 9: }
10: 
11: PunchedDisk(radius = 1cm);

-- Output --
-- Errors --
-- Model --
  Group -> 2D (root)
    Sketch = <NO ID>::PunchedDisk(radius: 10mm) -> 2D
      radius : 10mm
      Operation(Difference) -> 2D
        Group -> 2D
          Sketch = std::geo2d::Circle(center: (x: 0mm, y: 0mm), radius: 10mm) -> 2D
            center : Tuple = (x: 0mm, y: 0mm)
            radius : 10mm
            Primitive2D(Circle(Circle { radius: 10.0, offset: Vector2 [0.0, 0.0] })) = __bui…
          Sketch = std::geo2d::Circle(center: (x: 0mm, y: 0mm), radius: 5mm) -> 2D
            center : Tuple = (x: 0mm, y: 0mm)
            radius : 5mm
            Primitive2D(Circle(Circle { radius: 5.0, offset: Vector2 [0.0, 0.0] })) = __buil…

-- Test Result --
OK
