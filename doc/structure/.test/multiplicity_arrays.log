-- Test --
  multiplicity_arrays
  ../doc/structure/arguments.md:135

-- Code --

 1: r = std::geo2d::Rect(width = 2mm, height = 2mm);
 2: 
 3: r.std::ops::translate(x = [-4mm, 4mm], y = [-4mm, 4mm]);

-- Output --
-- Errors --
-- Model --
  Group -> 2D (root)
    Multiplicity -> 2D
      op std::ops::translate(x: Length = -4mm, y: Length = -4mm, z: Length = 0mm) -> 2D
        Transform __builtin::ops::translate(x: Scalar = -4, y: Scalar = -4, z: Scalar = 0)⏎ -> 2D
          sketch std::geo2d::Rect(height: Length = 2mm, width: Length = 2mm) -> 2D (root)
            Primitive2D __builtin::geo2d::Rect(height: Scalar = 2, width: Scalar = 2, x: Scalar = -1, y: Scalar = -1)⏎ -> 2D
      op std::ops::translate(x: Length = 4mm, y: Length = -4mm, z: Length = 0mm) -> 2D
        Transform __builtin::ops::translate(x: Scalar = 4, y: Scalar = -4, z: Scalar = 0)⏎ -> 2D
          sketch std::geo2d::Rect(height: Length = 2mm, width: Length = 2mm) -> 2D (root)
            Primitive2D __builtin::geo2d::Rect(height: Scalar = 2, width: Scalar = 2, x: Scalar = -1, y: Scalar = -1)⏎ -> 2D
      op std::ops::translate(x: Length = -4mm, y: Length = 4mm, z: Length = 0mm) -> 2D
        Transform __builtin::ops::translate(x: Scalar = -4, y: Scalar = 4, z: Scalar = 0)⏎ -> 2D
          sketch std::geo2d::Rect(height: Length = 2mm, width: Length = 2mm) -> 2D (root)
            Primitive2D __builtin::geo2d::Rect(height: Scalar = 2, width: Scalar = 2, x: Scalar = -1, y: Scalar = -1)⏎ -> 2D
      op std::ops::translate(x: Length = 4mm, y: Length = 4mm, z: Length = 0mm) -> 2D
        Transform __builtin::ops::translate(x: Scalar = 4, y: Scalar = 4, z: Scalar = 0)⏎ -> 2D
          sketch std::geo2d::Rect(height: Length = 2mm, width: Length = 2mm) -> 2D (root)
            Primitive2D __builtin::geo2d::Rect(height: Scalar = 2, width: Scalar = 2, x: Scalar = -1, y: Scalar = -1)⏎ -> 2D

-- Test Result --
OK
Export successful.
