-- Test --
  part_declaration
  ../doc/structure/workbench.md:43

-- Code --

// sketch with a `radius` as building plan
sketch wheel(radius: Length) {

    // init code
    const FACTOR = 2;

    // initializer
    init(diameter: Length) {
        // set `radius`
        radius = diameter / FACTOR;
    }

    // function (sub routine)
    fn into_diameter(radius: Length) {
        return radius * FACTOR;
    }

    // building code begins

    // set a property which can be seen from outside
    prop diameter = into_diameter(radius);
    // local variable
    i = 1;
    
    // create circle
    std::geo2d::circle(radius);
}

use std::debug::assert;

// call sketch with diameter
d = wheel(diameter = 2cm)
// check radius
assert_eq([d.radius, 1cm]);

// call sketch with radius
r = wheel(radius = 1cm)
// check diameter
assert([r.diameter, 2cm]);

-- Parse Error --
Parser error:   --> 34:1
   |
34 | assert_eq([d.radius, 1cm]);
   | ^---
   |
   = expected single_line_comment, array_element_access, tuple_element_access, attribute_access, add, subtract, multiply, divide, union, intersection, power_xor, greater_than, less_than, greater_equal, less_equal, equal, near, not_equal, and, or, xor, if_binary_op, else_binary_op, or method_call
-- Test Result --
FAIL (TODO)
