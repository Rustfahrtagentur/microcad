error: Symbol not found: hull
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^
     |
#0	root
error: Cannot nest item: Call(
    Call {
        name: QualifiedName(
            [
                Identifier(
                    Refer: SrcRef: 1:1: "hull",
                ),
            ],
        ),
        argument_list: CallArgumentList(
            Refer: <no ref>,
        ),
        src_ref: 1:1,
    },
)
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^^^
     |
#0	root
error: Symbol not found: translate
  ---> <no file>:2:5
     |
   2 |     translate(x = [-10, 10]mm, y = [-10, 10]mm)
     |     ^^^^^^^^^
     |
#0	root
error: Cannot nest item: Call(
    Call {
        name: QualifiedName(
            [
                Identifier(
                    Refer: SrcRef: 2:5: "translate",
                ),
            ],
        ),
        argument_list: CallArgumentList(
            Refer: SrcRef: 2:15: OrdMap { vec: [CallArgument { name: Some(Identifier(Refer: SrcRef: 2:15: "x")), value: ListExpression(ListExpression { list: ExpressionList([UnaryOp { op: "-", rhs: Literal(Integer(Refer: SrcRef: 2:21: 10)), src_ref: 2:20 }, Literal(Integer(Refer: SrcRef: 2:25: 10))]), unit: Some(Millimeter), src_ref: 2:19 }), src_ref: 2:15 }, CallArgument { name: Some(Identifier(Refer: SrcRef: 2:32: "y")), value: ListExpression(ListExpression { list: ExpressionList([UnaryOp { op: "-", rhs: Literal(Integer(Refer: SrcRef: 2:38: 10)), src_ref: 2:37 }, Literal(Integer(Refer: SrcRef: 2:42: 10))]), unit: Some(Millimeter), src_ref: 2:36 }), src_ref: 2:32 }] },
        ),
        src_ref: 2:5,
    },
)
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^^^
     |
#0	root
error: Symbol not found: circle
  ---> <no file>:3:9
     |
   3 |         circle(1mm);
     |         ^^^^^^
     |
#0	root
error: Cannot nest item: Call(
    Call {
        name: QualifiedName(
            [
                Identifier(
                    Refer: SrcRef: 3:9: "circle",
                ),
            ],
        ),
        argument_list: CallArgumentList(
            Refer: SrcRef: 3:16: OrdMap { vec: [CallArgument { name: None, value: Literal(Number(NumberLiteral(1.0, Millimeter, 3:16))), src_ref: 3:16 }] },
        ),
        src_ref: 3:9,
    },
)
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^^^
     |
#0	root
error: Symbol not found: hull
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^
     |
#0	root
error: Cannot nest item: Call(
    Call {
        name: QualifiedName(
            [
                Identifier(
                    Refer: SrcRef: 1:1: "hull",
                ),
            ],
        ),
        argument_list: CallArgumentList(
            Refer: <no ref>,
        ),
        src_ref: 1:1,
    },
)
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^^^
     |
#0	root
error: Symbol not found: translate
  ---> <no file>:2:5
     |
   2 |     translate(x = [-10, 10]mm, y = [-10, 10]mm)
     |     ^^^^^^^^^
     |
#0	root
error: Cannot nest item: Call(
    Call {
        name: QualifiedName(
            [
                Identifier(
                    Refer: SrcRef: 2:5: "translate",
                ),
            ],
        ),
        argument_list: CallArgumentList(
            Refer: SrcRef: 2:15: OrdMap { vec: [CallArgument { name: Some(Identifier(Refer: SrcRef: 2:15: "x")), value: ListExpression(ListExpression { list: ExpressionList([UnaryOp { op: "-", rhs: Literal(Integer(Refer: SrcRef: 2:21: 10)), src_ref: 2:20 }, Literal(Integer(Refer: SrcRef: 2:25: 10))]), unit: Some(Millimeter), src_ref: 2:19 }), src_ref: 2:15 }, CallArgument { name: Some(Identifier(Refer: SrcRef: 2:32: "y")), value: ListExpression(ListExpression { list: ExpressionList([UnaryOp { op: "-", rhs: Literal(Integer(Refer: SrcRef: 2:38: 10)), src_ref: 2:37 }, Literal(Integer(Refer: SrcRef: 2:42: 10))]), unit: Some(Millimeter), src_ref: 2:36 }), src_ref: 2:32 }] },
        ),
        src_ref: 2:5,
    },
)
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^^^
     |
#0	root
error: Symbol not found: circle
  ---> <no file>:3:9
     |
   3 |         circle(1mm);
     |         ^^^^^^
     |
#0	root
error: Cannot nest item: Call(
    Call {
        name: QualifiedName(
            [
                Identifier(
                    Refer: SrcRef: 3:9: "circle",
                ),
            ],
        ),
        argument_list: CallArgumentList(
            Refer: SrcRef: 3:16: OrdMap { vec: [CallArgument { name: None, value: Literal(Number(NumberLiteral(1.0, Millimeter, 3:16))), src_ref: 3:16 }] },
        ),
        src_ref: 3:9,
    },
)
  ---> <no file>:1:1
     |
   1 | hull()
     | ^^^^^^
     |
#0	root
