-- Test --
  orient_3d
  ../doc/libs/std/ops/orient.md:7

-- Code --

 1: use std::math::*;
 2: use std::ops::*;
 3: use std::geo3d::*;
 4: 
 5: Cylinder(h = 50mm, d = 35mm).orient([X,Y,Z]);

-- Output --
-- Errors --
-- Model --
  Group (root) ->
    Multiplicity ->
      Workpiece(op) std::ops::orient(v=(x=1, y=0, z=0)) ->
        - v = (x=1, y=0, z=0)
        Transform __builtin::ops::orient(x=1, y=0, z=0)⏎ ->
          Workpiece(part) std::geo3d::Cylinder(d=35mm, h=50mm) (root) ->
            - height = 50mm
            - offset = -25mm
            - radius_bottom = 17.5mm
            - radius_top = 17.5mm
            Transform __builtin::ops::translate(x=0, y=0, z=-25)⏎ ->
              Primitive3D __builtin::geo3d::Cylinder(height=50, radius_bottom=17.5, radius_top=17.5)⏎ ->
      Workpiece(op) std::ops::orient(v=(x=0, y=1, z=0)) ->
        - v = (x=0, y=1, z=0)
        Transform __builtin::ops::orient(x=0, y=1, z=0)⏎ ->
          Workpiece(part) std::geo3d::Cylinder(d=35mm, h=50mm) (root) ->
            - height = 50mm
            - offset = -25mm
            - radius_bottom = 17.5mm
            - radius_top = 17.5mm
            Transform __builtin::ops::translate(x=0, y=0, z=-25)⏎ ->
              Primitive3D __builtin::geo3d::Cylinder(height=50, radius_bottom=17.5, radius_top=17.5)⏎ ->
      Workpiece(op) std::ops::orient(v=(x=0, y=0, z=1)) ->
        - v = (x=0, y=0, z=1)
        Transform __builtin::ops::orient(x=0, y=0, z=1)⏎ ->
          Workpiece(part) std::geo3d::Cylinder(d=35mm, h=50mm) (root) ->
            - height = 50mm
            - offset = -25mm
            - radius_bottom = 17.5mm
            - radius_top = 17.5mm
            Transform __builtin::ops::translate(x=0, y=0, z=-25)⏎ ->
              Primitive3D __builtin::geo3d::Cylinder(height=50, radius_bottom=17.5, radius_top=17.5)⏎ ->

-- Test Result --
OK
Export successful.
