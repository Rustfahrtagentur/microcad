-- Test --
  orient_3d
  ../doc/libs/std/ops/orient.md:7

-- Code --

 1: use std::math::*;
 2: use std::ops::*;
 3: use std::geo3d::*;
 4: 
 5: Cylinder(h = 50mm, d = 35mm).orient([X,Y,Z]);

-- Output --
-- Errors --
-- Model --
  Group -> 3D (root)
    op std::ops::orient(v: (x: 1, y: 0, z: 0)) -> 3D
      Transform __builtin::ops::orient(x: 1, y: 0, z: 0)⏎ -> 3D
        part std::geo3d::Cylinder(d: 35mm, h: 50mm) -> 3D
          Transform __builtin::ops::translate(x: 0, y: 0, z: -25)⏎ -> 3D
            Primitive3D __builtin::geo3d::Cylinder(height: 50, radius_bottom: 17.5, radius_t…
    op std::ops::orient(v: (x: 0, y: 1, z: 0)) -> 3D
      Transform __builtin::ops::orient(x: 0, y: 1, z: 0)⏎ -> 3D
        part std::geo3d::Cylinder(d: 35mm, h: 50mm) -> 3D
          Transform __builtin::ops::translate(x: 0, y: 0, z: -25)⏎ -> 3D
            Primitive3D __builtin::geo3d::Cylinder(height: 50, radius_bottom: 17.5, radius_t…
    op std::ops::orient(v: (x: 0, y: 0, z: 1)) -> 3D
      Transform __builtin::ops::orient(x: 0, y: 0, z: 1)⏎ -> 3D
        part std::geo3d::Cylinder(d: 35mm, h: 50mm) -> 3D
          Transform __builtin::ops::translate(x: 0, y: 0, z: -25)⏎ -> 3D
            Primitive3D __builtin::geo3d::Cylinder(height: 50, radius_bottom: 17.5, radius_t…

-- Test Result --
OK
Export successful.
