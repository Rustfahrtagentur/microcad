-- Test --
  mirror_3d
  ../doc/libs/std/ops/mirror.md:7

-- Code --

 1: use std::math::*;
 2: use std::ops::*;
 3: use std::geo3d::*;
 4: 
 5: s = 25mm;
 6: p = 5mm;
 7: { 
 8:     (Cube(s * 2) - Cube(s).translate(x = s/2, y = s/2, z = s/2))
 9:         .translate(x = s + p, y = s + p, z = s + p)
10: }
11: //.mirror([X,Y,Z]);

-- Output --
-- Errors --
-- Model --
  Group (root) ->
    Group ->
      Workpiece(op) std::ops::translate(x=30mm, y=30mm, z=30mm) ->
        - x = 30mm
        - y = 30mm
        - z = 30mm
        Transform __builtin::ops::translate(x=30, y=30, z=30)⏎ ->
          Operation subtract()⏎ (root) ->
            Group ->
              Workpiece(part) std::geo3d::Cube(size=50mm) ->
                - size_x = 50mm
                - size_y = 50mm
                - size_z = 50mm
                Transform __builtin::ops::translate(x=-25, y=-25, z=-25)⏎ ->
                  Primitive3D __builtin::geo3d::Cube(size_x=50, size_y=50, size_z=50)⏎ ->
              Workpiece(op) std::ops::translate(x=12.5mm, y=12.5mm, z=12.5mm) ->
                - x = 12.5mm
                - y = 12.5mm
                - z = 12.5mm
                Transform __builtin::ops::translate(x=12.5, y=12.5, z=12.5)⏎ ->
                  Workpiece(part) std::geo3d::Cube(size=25mm) (root) ->
                    - size_x = 25mm
                    - size_y = 25mm
                    - size_z = 25mm
                    Transform __builtin::ops::translate(x=-12.5, y=-12.5, z=-12.5)⏎ ->
                      Primitive3D __builtin::geo3d::Cube(size_x=25, size_y=25, size_z=25)⏎ ->

-- Test Result --
OK
Export successful.
