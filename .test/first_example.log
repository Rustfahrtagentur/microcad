-- Test --
  first_example
  ../README.md:43

-- Code --

 1: use std::math::*;
 2: use std::ops::*;
 3: use std::geo3d::*;
 4: 
 5: part CsgCube(size: Length) {
 6:     body = Sphere(r = size / 1.5) & Cube(size);
 7:     holes = Cylinder(h = size, d = size / 1.5).orient([X,Y,Z]);
 8:     body - holes;
 9: }
10: 
11: CsgCube(50mm);

-- Output --
-- Errors --
-- Model --
  Group -> 3D (root)
    part [30m[105m[1m NO ID [39m[49m[22m::CsgCube(size: 50mm) -> 3D[0m
      Operation subtract()⏎ -> 3D
        Group -> 3D
          Operation intersect()⏎ -> 3D
            Group -> 3D
              part std::geo3d::Sphere(r: 33.333333333333336mm) -> 3D
                Primitive3D __builtin::geo3d::Sphere(radius: 33.333333333333336)⏎ -> 3D
              part std::geo3d::Cube(size: 50mm) -> 3D
                Transform __builtin::ops::translate(x: -25, y: -25, z: -25)⏎ -> 3D
                  Primitive3D __builtin::geo3d::Cube(size_x: 50, size_y: 50, size_z: 50)⏎ -> 3D
          Operation union()⏎ -> 3D
            Group -> 3D
              op std::ops::orient(v: (x: 1, y: 0, z: 0)) -> 3D
                Transform __builtin::ops::orient(x: 1, y: 0, z: 0)⏎ -> 3D
                  part std::geo3d::Cylinder(d: 33.333333333333336mm, h: 50mm) -> 3D
                    Transform __builtin::ops::translate(x: 0, y: 0, z: -25)⏎ -> 3D
                      Primitive3D __builtin::geo3d::Cylinder(height: 50, radius_bottom: 16.66666666666…
              op std::ops::orient(v: (x: 0, y: 1, z: 0)) -> 3D
                Transform __builtin::ops::orient(x: 0, y: 1, z: 0)⏎ -> 3D
                  part std::geo3d::Cylinder(d: 33.333333333333336mm, h: 50mm) -> 3D
                    Transform __builtin::ops::translate(x: 0, y: 0, z: -25)⏎ -> 3D
                      Primitive3D __builtin::geo3d::Cylinder(height: 50, radius_bottom: 16.66666666666…
              op std::ops::orient(v: (x: 0, y: 0, z: 1)) -> 3D
                Transform __builtin::ops::orient(x: 0, y: 0, z: 1)⏎ -> 3D
                  part std::geo3d::Cylinder(d: 33.333333333333336mm, h: 50mm) -> 3D
                    Transform __builtin::ops::translate(x: 0, y: 0, z: -25)⏎ -> 3D
                      Primitive3D __builtin::geo3d::Cylinder(height: 50, radius_bottom: 16.66666666666…

-- Test Result --
OK
Export successful.
