-- Test --
  first_example
  ../README.md:43

-- Code --

 1: use std::math::*;
 2: use std::ops::*;
 3: use std::geo3d::*;
 4: 
 5: part CsgCube(size: Length) {
 6:     body = Sphere(r = size / 1.5) & Cube(size);
 7:     holes = Cylinder(h = size, d = size / 1.5).orient([X,Y,Z]);
 8:     body - holes;
 9: }
10: 
11: CsgCube(50mm);

-- Output --
-- Errors --
-- Model --
  Group -> 3D (root)
    part <NO ID>::CsgCube(size: Length = 50mm) -> 3D
      Operation subtract()⏎ -> 3D
        Group -> 3D
          Operation intersect()⏎ -> 3D
            Group -> 3D
              part std::geo3d::Sphere(r: Length = 33.33333333333334mm) -> 3D
                Primitive3D __builtin::geo3d::Sphere(radius: Scalar = 33.33333333333334)⏎ -> 3D
              part std::geo3d::Cube(size: Length = 50mm) -> 3D
                Transform __builtin::ops::translate(x: Scalar = -25, y: Scalar = -25, z: Scalar = -25)⏎ -> 3D
                  Primitive3D __builtin::geo3d::Cube(size_x: Scalar = 50, size_y: Scalar = 50, size_z: Scalar = 50)⏎ -> 3D
          Multiplicity -> 3D
            op std::ops::orient(v: Vec2 = (x: Scalar = 1, y: Scalar = 0, z: Scalar = 0)) -> 3D
              Transform __builtin::ops::orient(x: Scalar = 1, y: Scalar = 0, z: Scalar = 0)⏎ -> 3D
                part std::geo3d::Cylinder(d: Length = 33.33333333333334mm, h: Length = 50mm) -> 3D (root)
                  Transform __builtin::ops::translate(x: Scalar = 0, y: Scalar = 0, z: Scalar = -25)⏎ -> 3D
                    Primitive3D __builtin::geo3d::Cylinder(height: Scalar = 50, radius_bottom: Scalar = 16.66666666666667, radius_top: Scalar = 16.6666666666666…
            op std::ops::orient(v: Vec2 = (x: Scalar = 0, y: Scalar = 1, z: Scalar = 0)) -> 3D
              Transform __builtin::ops::orient(x: Scalar = 0, y: Scalar = 1, z: Scalar = 0)⏎ -> 3D
                part std::geo3d::Cylinder(d: Length = 33.33333333333334mm, h: Length = 50mm) -> 3D (root)
                  Transform __builtin::ops::translate(x: Scalar = 0, y: Scalar = 0, z: Scalar = -25)⏎ -> 3D
                    Primitive3D __builtin::geo3d::Cylinder(height: Scalar = 50, radius_bottom: Scalar = 16.66666666666667, radius_top: Scalar = 16.6666666666666…
            op std::ops::orient(v: Vec2 = (x: Scalar = 0, y: Scalar = 0, z: Scalar = 1)) -> 3D
              Transform __builtin::ops::orient(x: Scalar = 0, y: Scalar = 0, z: Scalar = 1)⏎ -> 3D
                part std::geo3d::Cylinder(d: Length = 33.33333333333334mm, h: Length = 50mm) -> 3D (root)
                  Transform __builtin::ops::translate(x: Scalar = 0, y: Scalar = 0, z: Scalar = -25)⏎ -> 3D
                    Primitive3D __builtin::geo3d::Cylinder(height: Scalar = 50, radius_bottom: Scalar = 16.66666666666667, radius_top: Scalar = 16.6666666666666…

-- Test Result --
OK
Export successful.
